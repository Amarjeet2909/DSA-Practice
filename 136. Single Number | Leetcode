//Solution 1
class Solution {
public:
    int singleNumber(vector<int>& nums) {
        int s = nums.size(), res=0;
        sort(nums.begin(),nums.end());
        int z= s-2;
        if(s==1){
            res= nums[0];
            return res;
        }
        for(int i=0;i<=z;i+=2){
                if(i+1>z){
                 res= nums[i];
                 return res;
                }
                else{
                    if(nums[i]!=nums[i+1]){
                    res=nums[i];
                    return res;
            }
          }
        }
        res= nums[s-1];
        return res;
    }
};

//Solution 2
class Solution {
public:
    int singleNumber(vector<int>& nums) {
        unordered_map<int,int> m;
        for(auto i : nums){
            m[i]++;
        }
        for(auto i: m){
            if(i.second==1)
            return i.first;
        }
        return -1;
    }
};
