// Solution 1
class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int result=0;
        unordered_map<int, int> mp;
        int n=nums.size();
        for(int i=0;i<n;i++)
        {
            mp[nums[i]]++;
        }
        int majority_count=floor(n/2);
        for(auto x: mp)
        {
            if(x.second > majority_count)
            {
                result=x.first;
                break;
            }
        }
        return result;
    }
};

// Moore's Voting Algo | Optimized Solution
class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int result=nums[0], count=1;
        int n=nums.size();
        for(int i=1;i<n;i++)
        {
            if(count==0)
            {
                count++;
                result=nums[i];
            }
            else if(result==nums[i])
            {
                count++;
            }
            else
            count--;
        }
        return result;
    }
};
