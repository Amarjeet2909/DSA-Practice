// Solution 1
class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int m = matrix.size();
        int n = matrix[0].size();
        bool res = false;
        for(int i=0;i<m;i++)
        {
            if((target>=matrix[i][0])&&(target<=matrix[i][n-1]))
            {
                for(int j=0;j<n;j++)
                {
                    if(matrix[i][j]==target) return true;
                }
            }
        }
        return res;
    }
};

// Solution2 | Optimized
class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int n= matrix.size();
        if(n==0) return false;
        int m = matrix[0].size();
        int lo=0, hi= (n*m)-1;
        
        while(lo <= hi)
        {
            int mid = (lo+(hi-lo)/2);
            if(matrix[mid/m][mid%m]==target)
            return true;
            else if(target < matrix[mid/m][mid%m])
            hi=mid-1;
            else
            lo = mid+1;
        }
        return false;
    }
};
